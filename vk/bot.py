import json
import re
from random import randrange, choice

import vk_api

from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_api.longpoll import VkLongPoll, VkEventType

from core.config import settings
from vk.api import VK
from vk.assets import calculate_age


class VkBot:
    def __init__(self, access_token):
        self.vk = vk_api.VkApi(token=access_token)
        self.long_poll = VkLongPoll(self.vk)
        self.btn_text = ['‚ù§Ô∏è', 'üëé', '‚û°Ô∏è', '–∏–∑–±—Ä–∞–Ω–Ω—ã–µ', '–≤—ã—Ö–æ–¥']

    def start(self):
        for event in self.long_poll.listen():
            if event.type == VkEventType.MESSAGE_NEW:
                if event.to_me:
                    self.request_handler(event)

    def request_handler(self, event):

        if 'payload' in event.raw[6]:
            command_obj = json.loads(event.payload)
            command = command_obj.get('command')
            if command == 'like':
                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {command_obj.get("current_user")} ‚ù§Ô∏è {command_obj.get("founded_user")}')
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ favorites
                self.add_to_favourites()
            elif command == 'dislike':
                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {command_obj.get("current_user")} üëé {command_obj.get("founded_user")}')
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ blacklist
                self.add_to_blacklist()
            elif command == 'next':
                pass
            elif command == 'favorites':
                self.get_favourites()
            elif command == 'exit':
                self.send_msg(send_id=event.user_id, message='üëã–í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –µ—â–µ')
        else:
            command = None

        request = event.text
        if request.lower() == '–ø—Ä–∏–≤–µ—Ç' or 'setting' in request or command == 'setting':
            vk_session = VK(access_token=settings.VK_USER_TOKEN)
            current_user = vk_session.get_users_info(user_ids=event.user_id)[0]
            current_user = self.check_user_info(event, current_user, vk_session)
            if current_user.get('bdate'):
                is_new = self.add_new_user(current_user)
                options = {
                    'age_from': 14,
                    'age_to': 80
                }
                user_age = current_user.get('bdate')

                if user_age:
                    options['age_from'] = calculate_age(user_age) - 5 if current_user['sex'] == 1 else calculate_age(
                        user_age)
                    options['age_to'] = calculate_age(user_age) if current_user['sex'] == 1 else calculate_age(
                        user_age) + 5

                founded_users = vk_session.search_users(
                    sex=current_user['sex'],
                    city_id=current_user['city']['id'],
                    age_from=options['age_from'],
                    age_to=options['age_to']
                )
                message_pack = settings.bot_massages_for_male if current_user[
                                                                     'sex'] == 2 else settings.bot_massages_for_female

                for user in founded_users:
                    # –ó–î–ï–°–¨ –ü–†–û–í–ï–†–Ø–ï–ú –ï–°–¢–¨ –õ–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –í –°–ü–ò–°–ö–ê–• (–ò–ó–ë–†–ê–ù–ù–´–ï –ò–õ–ò –ë–õ–≠–ö–õ–ò–°–¢) –£ –¢–ï–ö–£–©–ï–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
                    # –ï–°–õ–ò –ï–°–¢–¨ –¢–û –ü–†–û–ë–£–ï–ú –°–õ–ï–î–£–Æ–©–ï–ì–û –ï–°–õ–ò –ù–ï–¢ –¢–û –†–ê–ë–û–¢–ê–ï–ú –î–ê–õ–¨–®–ï –° –ù–ò–ú
                    if self.already_viewed(user):
                        continue

                    message = f"{choice(message_pack)} \n " \
                              f"{user.get('first_name')} {user.get('last_name')}. " \
                              f"\n –°—Å—ã–ª–∫–∞: http://www.vk.com/{user.get('domain')}"

                    photo_attachments = vk_session.get_photos(owner_id=user['id'])

                    keyboard = VkKeyboard(one_time=False, inline=True)
                    keyboard.add_button('‚ù§Ô∏è', color=VkKeyboardColor.SECONDARY,
                                        payload={'command': 'like',
                                                 'current_user': event.user_id,
                                                 'founded_user': user['id']})
                    keyboard.add_button('üëé', color=VkKeyboardColor.SECONDARY,
                                        payload={'command': 'dislike',
                                                 'current_user': event.user_id,
                                                 'founded_user': user['id']})
                    keyboard.add_button('‚û°Ô∏è', color=VkKeyboardColor.SECONDARY, payload={'command': 'next'})
                    keyboard.add_line()  # –ù–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
                    keyboard.add_button('–ò–∑–±—Ä–∞–Ω–Ω—ã–µ', color=VkKeyboardColor.PRIMARY, payload={'command': 'favorites'})
                    keyboard.add_button('–í—ã—Ö–æ–¥', color=VkKeyboardColor.PRIMARY, payload={'command': 'exit'})
                    vk_keyboard = keyboard.get_keyboard()

                    self.send_msg(send_id=event.user_id, message=message, attachments=photo_attachments,
                                  keyboard=vk_keyboard)
                    break
        elif request.lower() in self.btn_text:
            # –ó–∞–≥–ª—É—à–∫–∞ –æ—Ç –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫
            pass
        else:
            self.send_msg(event.user_id, "–ù–µ –ø–æ–Ω—è–ª–∞ –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞...")

    def check_user_info(self, event, current_user, vk_session):
        if not current_user.get('bdate'):
            if 'setting' in event.text:
                setting = re.findall(r'-\s*(\d{2}.\d{2}.\d{4})\s*-\s*(\S+)', event.text)[0]
                current_user['bdate'] = setting[0]
                current_user['city'] = vk_session.get_city(setting[1])
                msg = f'–ü–æ–ª—É—á–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è - {setting[0]},\n –ì–æ—Ä–æ–¥ –ø–æ–∏—Å–∫–∞ - {setting[1]}'
                payload = '{\"command\":\"setting\"}'
                self.send_msg(send_id=event.user_id, message=msg, payload=payload)
            else:
                msg = '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüòî\n' \
                      '–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É setting —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –≥–æ—Ä–æ–¥–∞.\n' \
                      '–ü—Ä–∏–º–µ—Ä, setting - 01.01.1990 - –ú–æ—Å–∫–≤–∞'
                self.send_msg(send_id=event.user_id, message=msg)

        return current_user

    def send_msg(self, send_id, message, attachments=None, keyboard=None, payload=None):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ messages.send
        :param send_id: vk id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
        :param message: —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :param attachments: —Å—Ç—Ä–æ–∫–∞ —Å —Ñ–æ—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        :param keyboard: –æ–±—ä–µ–∫—Ç –∫–Ω–æ–ø–æ–∫ VkKeyboard
        :return: None
        """

        self.vk.method('messages.send', {'user_id': send_id,
                                         'message': message,
                                         'random_id': randrange(10 ** 7),
                                         'attachment': attachments,
                                         'keyboard': keyboard,
                                         'payload': payload
                                         })

    def add_to_favourites(self):
        pass

    def add_to_blacklist(self):
        pass

    def get_favourites(self):
        '''
        –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ favorites —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞: –§–ò–û -- –í–æ–∑—Ä–∞—Å—Ç -- –ì–æ—Ä–æ–¥ -- –°—Å—ã–ª–∫–∞
        :return:
        '''
        pass

    def already_viewed(self, user) -> bool:
        '''
        –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–∞–∫–∏—Ö –ª–∏–±–æ —Å–ø–∏—Å–∫–∞—Ö —É —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param user:
        :return:
        '''
        return False

    def add_new_user(self, user) -> bool:
        '''
        –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ –æ–Ω –≤ –ë–î,
        –î–æ–±–∞–≤–ª—è–µ—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True,
        –ò–Ω–∞—á–µ False

        :param user:
        :return:  bool
        '''

        pass
